name: Build and Push Backend Docker Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - 'requirements.txt'
      - 'multi_agents/requirements.txt'
      - 'backend/**'
      - 'gpt_researcher/**'
      - 'main.py'
      - '.github/workflows/backend-docker.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - 'requirements.txt'
      - 'multi_agents/requirements.txt'
      - 'backend/**'
      - 'gpt_researcher/**'
      - 'main.py'

env:
  IMAGE_NAME: ${{ toLower(github.repository) }}-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ./Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  smoke-test:
    needs: build-and-push
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: |
          docker pull ghcr.io/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}

      - name: Run container
        run: |
          docker run -d --rm -p 8000:8000 --name gptr-backend ghcr.io/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}
          sleep 12

      - name: Health check
        run: |
          curl -fsS http://localhost:8000/v1/models | jq . > /dev/null

      - name: Stop container
        if: always()
        run: |
          docker stop gptr-backend || true
